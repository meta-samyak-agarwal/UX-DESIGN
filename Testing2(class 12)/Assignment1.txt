1. Which software development technique is good for systems with third-party API calls, cron jobs, data exports/imports?

Answer:--> Microservices Architecture is ideal for systems involving third-party API calls(like google map API) , cron jobs(automaritc sednig the daily reports ) , data exports/imports(uploading and dowanloading the cv) . Each service is developed, tested, and deployed independently. Advantages include:

Scalability: Services like data exports or cron jobs can scale independently.

Isolation: Failure in one service doesn’t bring down the entire system like for examole if the API calling service is down by any chance then the whole system won't break.



**********************************

2. Where does Test Automation fit in the Software Life Cycle? Explain with a diagram.

Answer:
Test Automation fits primarily in the Testing phase of the Software Development Life Cycle (SDLC.

 Requirements ->  Design -> Development -> Testing(Manual + Automation) -> Deployment.



**********************************

3. Can we skip the manual testing and why?

Answer: No, manual testing should not be completely skipped because:

A) It helps in exploratory testing, where human intuition is valuable for example , if clicking the button to check whether the app crashes at that timecan be done manually.

b) if the UI changes by any chnge in sceen size , then the automated test cases may fail , there we need the manual testing.

c) the automated testing is helpful if the program has some repeating testing , but if the program to test ahs different function to test , then istead of wasting the scripts for the automated test case is more time consuming than , doing it manually.


**********************************


4. Give the names of the selector(locators)?

Answer: Common locators in automation tools are:

a) ID
b) Name
c) Class Name
d) Tag Name
e) Link Text
f) CSS Selector



**********************************


5. What is the modular framework?

Answer:
A Modular Testing Framework divides the test cases into separate modules or functions. Each module represents a specific part of the application.

Benefits:

Code reusability

Easy maintenance

Clear structure


Example: Login, Search, Checkout as separate test modules.


**********************************



6. Explain the Open Source Tool.

Answer: An open-source tool is software with publicly available source code that users can modify and distribute.

Example: Postman -> Supports multiple languages (Java, Python, etc.) having Community-support and not having and licence cost.


**********************************


7. What is a Hybrid framework?

Answer:
A Hybrid Framework is a combination of multiple frameworks like:

Modular Framework ( divide test cases into reusable components)
         +
Keyword-Driven Framework (keyinputs like enter , click etc)



**********************************


8. Write a name of record and replay tool.

Answer:
Selenium IDE is a record and replay tool.(first we record the user actions on application and then reply them to run the test automatically)

Records user actions in the browser

Generates test scripts automatically

Ideal for beginners and quick test cases



**********************************


9. What is the difference between BDD and Cucumber?

Answer:

BDD (Behavior Driven Development) -> test cases are written in normal English lang, this "this that" so that other ppl can also understand it.

Cucumber is a automation tool that supports the BDD.


**********************************


10. Can we replace the Manual Regression testing effort from Test automation and how?

Answer:
Yes, test automation is ideal for regression testing(it checks that existing functionality still works after new change made to the code, like login button to check whether it is not broken) because:

Tests are repeated frequently.

Automation saves time and effort.

It ensures consistency and faster feedback.



**********************************


11. How many ‘A’s test script has? Explain them.

Answer:
Test scripts follow the 3 A’s:

1. Arrange: Set up the test environment and test data.
2. Act: Perform the actual action or input.
3. Assert: Check the outcome with expected results.



